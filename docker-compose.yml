services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    networks:
      - DoLS-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  # PostgreSQL database service
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - DoLS-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m
    networks:
      - DoLS-network
    mem_limit: 1g  
    restart: unless-stopped

  seq:
    image: datalust/seq:latest
    container_name: seq
    ports:
      - "5341:80"
      - "5342:5341"
    environment:
      ACCEPT_EULA: "Y"
    networks:
      - DoLS-network
    restart: unless-stopped

  indexer-service:
    build:
      context: .
      dockerfile: Indexer/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: "http://seq:5341"
      ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    networks:
      - DoLS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: no
    deploy:
      replicas: 3

  webapi:
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    container_name: webapi
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: "http://seq:5341"
      ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    ports:
      - "5228:5228" 
    networks:
      - DoLS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5228
    container_name: frontend
    ports:
      - "3000:80" 
    depends_on:
      - webapi
    networks:
      - DoLS-network

  cleaner-service-1:
    build:
      context: .
      dockerfile: Cleaner/Dockerfile
    container_name: cleaner-service-1
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DATA_PATH: /data
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: "http://seq:5341"
      ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    networks:
      - DoLS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./Data/maildir/1:/data
    restart: no

  cleaner-service-2:
    build:
      context: .
      dockerfile: Cleaner/Dockerfile
    container_name: cleaner-service-2
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DATA_PATH: /data
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: "http://seq:5341"
      ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    networks:
      - DoLS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./Data/maildir/2:/data
    restart: no

  cleaner-service-3:
    build:
      context: .
      dockerfile: Cleaner/Dockerfile
    container_name: cleaner-service-3
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DATA_PATH: /data
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: "http://seq:5341"
      ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    networks:
      - DoLS-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./Data/maildir/3:/data
    restart: no

networks:
  DoLS-network:
    driver: bridge
